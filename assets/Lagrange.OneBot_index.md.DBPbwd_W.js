import{_ as e,c as a,o as t,a4 as r}from"./chunks/framework.DUCr4ECn.js";const m=JSON.parse('{"title":"Lagrange.OneBot","description":"","frontmatter":{},"headers":[],"relativePath":"Lagrange.OneBot/index.md","filePath":"Lagrange.OneBot/index.md","lastUpdated":1737986296000}'),n={name:"Lagrange.OneBot/index.md"},o=r('<h1 id="lagrange-onebot" tabindex="-1">Lagrange.OneBot <a class="header-anchor" href="#lagrange-onebot" aria-label="Permalink to &quot;Lagrange.OneBot&quot;">​</a></h1><p>Lagrange.Core 实现了 OneBot V11 的通信协议, 可以和主流 Bot 框架进行通信</p><ol><li><a href="https://github.com/LagrangeDev/Lagrange.Core/releases/tag/nightly" target="_blank" rel="noreferrer">nightly</a> 通过 Nightly Release 获取 Self-Contained .NET 8 程序包 (该版本可能不为最新版本)</li><li><a href="https://github.com/LagrangeDev/Lagrange.Core/pkgs/container/lagrange.onebot" target="_blank" rel="noreferrer">Docker</a> 通过 ghcr.io 的 Docker 部署</li><li><a href="https://github.com/LagrangeDev/Lagrange.Core/actions" target="_blank" rel="noreferrer">Actions</a> 通过 Docker 获取 Framework-Dependent .NET 7 / 8 程序包</li></ol><div class="tip custom-block"><p class="custom-block-title">提示</p><p>Actions 内的工件为 Framework-Dependent 打包模式；</p><p>请前往 <a href="https://dotnet.microsoft.com/zh-cn/download" target="_blank" rel="noreferrer">Microsoft</a> 获取 .NET Runtime 以运行</p></div><div class="danger custom-block"><p class="custom-block-title">提醒</p><p>NTQQ 的 SignServer 不可与 Android 协议混用 (如 unidbg-fetch-qsign)</p><p>本项目不主动提供 SignServer, 请前往 README.md 加入 Telegram 群聊以获取有效信息</p></div>',5),i=[o];function g(l,s,c,d,p,_){return t(),a("div",null,i)}const f=e(n,[["render",g]]);export{m as __pageData,f as default};
